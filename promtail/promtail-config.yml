server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # GELF listener for receiving logs from Docker GELF driver
  - job_name: gelf
    gelf:
      listen_address: 0.0.0.0:12201
      use_incoming_timestamp: true
      labels:
        job: gelf

    pipeline_stages:
      # Step 1: Extract GELF metadata fields and parse the JSON log
      - json:
          expressions:
            log_message: short_message
            container: _container_name

      # Step 2: Parse the JSON from the log_message field
      - json:
          source: log_message
          expressions:
            level: level
            client_ip: client_ip
            user_id: user_id
            message: message
            method: http.request.method
            status_code: http.response.status_code
            bytes: http.response.bytes
            url: http.url
            user_agent: user_agent.original
            country_name: geocode.country_name
            country_code: geocode.country_iso_code
            city_name: geocode.city_name
            geo_lat: geocode.location.lat
            geo_lon: geocode.location.lon
            flow_name: flow_name
            session_id: session_id
            user_name: user_name

      # Step 3: Replace the log line with the parsed JSON
      - output:
          source: log_message

      # Step 4: Create Loki labels from the extracted fields
      - labels:
          container:
          level:
          status_code:
          method:
          country_name:
          city_name:
          user_name:
          flow_name: