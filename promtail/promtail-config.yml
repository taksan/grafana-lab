server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    backoff_config:
      min_period: 500ms
      max_period: 5m
      max_retries: 10
    timeout: 10s

scrape_configs:
  # Scrape logs from Docker containers
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      # Only collect logs from log-generator container
      - source_labels: ['__meta_docker_container_name']
        regex: '/(log-generator)'
        action: keep
      
      # Add container name as label
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container'
        regex: '/(.*)'
        replacement: '$1'
      
      # Add container ID as label
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'
        regex: '(.{12})'
        replacement: '$1'
      
      # Add image name as label
      - source_labels: ['__meta_docker_container_image']
        target_label: 'image'
      
      # Add log path
      - source_labels: ['__meta_docker_container_id']
        target_label: '__path__'
        replacement: '/var/lib/docker/containers/$1/*.log'
    
    # Parse JSON logs
    pipeline_stages:
      # Parse Docker JSON format
      - json:
          expressions:
            log: log
            stream: stream
            time: time
      
      # Extract timestamp from Docker log
      - timestamp:
          source: time
          format: RFC3339Nano
      
      # Drop logs older than 1 hour
      - match:
          selector: '{container="log-generator"}'
          stages:
            - drop:
                older_than: 1h
                source: time
      
      # Parse the actual log content (our JSON logs)
      - json:
          source: log
          expressions:
            timestamp: timestamp
            level: level
            client_ip: client_ip
            user_id: user_id
            method: http.request.method
            status_code: http.response.status_code
            bytes: http.response.bytes
            url: http.url
            message: message
      
      # Add extracted fields as labels
      - labels:
          level:
          client_ip:
          user_id:
          method:
          status_code:
      
      # Output the formatted log line
      - output:
          source: log
